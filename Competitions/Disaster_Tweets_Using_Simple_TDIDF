{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/suryan5h/nlp-disaster-tweets-competition?scriptVersionId=219043552\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.591735Z","iopub.execute_input":"2025-01-24T09:30:18.592093Z","iopub.status.idle":"2025-01-24T09:30:18.610987Z","shell.execute_reply.started":"2025-01-24T09:30:18.592065Z","shell.execute_reply":"2025-01-24T09:30:18.609667Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/nlp-getting-started/sample_submission.csv\n/kaggle/input/nlp-getting-started/train.csv\n/kaggle/input/nlp-getting-started/test.csv\n","output_type":"stream"}],"execution_count":29},{"cell_type":"markdown","source":"# Imports","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.model_selection import train_test_split, GridSearchCV","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.612068Z","iopub.execute_input":"2025-01-24T09:30:18.612399Z","iopub.status.idle":"2025-01-24T09:30:18.624616Z","shell.execute_reply.started":"2025-01-24T09:30:18.612369Z","shell.execute_reply":"2025-01-24T09:30:18.623245Z"}},"outputs":[],"execution_count":30},{"cell_type":"markdown","source":"# Loading Data","metadata":{}},{"cell_type":"code","source":"train = pd.read_csv('/kaggle/input/nlp-getting-started/train.csv')\ntest = pd.read_csv('/kaggle/input/nlp-getting-started/test.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.626116Z","iopub.execute_input":"2025-01-24T09:30:18.626474Z","iopub.status.idle":"2025-01-24T09:30:18.683759Z","shell.execute_reply.started":"2025-01-24T09:30:18.626447Z","shell.execute_reply":"2025-01-24T09:30:18.682466Z"}},"outputs":[],"execution_count":31},{"cell_type":"code","source":"train.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.684974Z","iopub.execute_input":"2025-01-24T09:30:18.685437Z","iopub.status.idle":"2025-01-24T09:30:18.697111Z","shell.execute_reply.started":"2025-01-24T09:30:18.685399Z","shell.execute_reply":"2025-01-24T09:30:18.696019Z"}},"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target  \n0       1  \n1       1  \n2       1  \n3       1  \n4       1  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":32},{"cell_type":"code","source":"test.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.698217Z","iopub.execute_input":"2025-01-24T09:30:18.698548Z","iopub.status.idle":"2025-01-24T09:30:18.720541Z","shell.execute_reply.started":"2025-01-24T09:30:18.69849Z","shell.execute_reply":"2025-01-24T09:30:18.719053Z"}},"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text\n0   0     NaN      NaN                 Just happened a terrible car crash\n1   2     NaN      NaN  Heard about #earthquake is different cities, s...\n2   3     NaN      NaN  there is a forest fire at spot pond, geese are...\n3   9     NaN      NaN           Apocalypse lighting. #Spokane #wildfires\n4  11     NaN      NaN      Typhoon Soudelor kills 28 in China and Taiwan","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just happened a terrible car crash</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Heard about #earthquake is different cities, s...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>there is a forest fire at spot pond, geese are...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>9</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Apocalypse lighting. #Spokane #wildfires</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>11</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Typhoon Soudelor kills 28 in China and Taiwan</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":33},{"cell_type":"code","source":"print(\"Train Shape:\", train.shape)\nprint(\"Test Shape:\", test.shape)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.721809Z","iopub.execute_input":"2025-01-24T09:30:18.722207Z","iopub.status.idle":"2025-01-24T09:30:18.740016Z","shell.execute_reply.started":"2025-01-24T09:30:18.722172Z","shell.execute_reply":"2025-01-24T09:30:18.738638Z"}},"outputs":[{"name":"stdout","text":"Train Shape: (7613, 5)\nTest Shape: (3263, 4)\n","output_type":"stream"}],"execution_count":34},{"cell_type":"code","source":"sns.countplot(data=train,x='target')\nplt.title(\"Target Variable Distribution in train dataset\")\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.741096Z","iopub.execute_input":"2025-01-24T09:30:18.741459Z","iopub.status.idle":"2025-01-24T09:30:18.894354Z","shell.execute_reply.started":"2025-01-24T09:30:18.741432Z","shell.execute_reply":"2025-01-24T09:30:18.89304Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"\n"},"metadata":{}}],"execution_count":35},{"cell_type":"code","source":"train.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.895573Z","iopub.execute_input":"2025-01-24T09:30:18.895873Z","iopub.status.idle":"2025-01-24T09:30:18.905905Z","shell.execute_reply.started":"2025-01-24T09:30:18.895848Z","shell.execute_reply":"2025-01-24T09:30:18.904737Z"}},"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"id             0\nkeyword       61\nlocation    2533\ntext           0\ntarget         0\ndtype: int64"},"metadata":{}}],"execution_count":36},{"cell_type":"code","source":"test.isnull().sum()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.906972Z","iopub.execute_input":"2025-01-24T09:30:18.907231Z","iopub.status.idle":"2025-01-24T09:30:18.925965Z","shell.execute_reply.started":"2025-01-24T09:30:18.907208Z","shell.execute_reply":"2025-01-24T09:30:18.924914Z"}},"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"id             0\nkeyword       26\nlocation    1105\ntext           0\ndtype: int64"},"metadata":{}}],"execution_count":37},{"cell_type":"code","source":"train.keyword.value_counts()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.927101Z","iopub.execute_input":"2025-01-24T09:30:18.927418Z","iopub.status.idle":"2025-01-24T09:30:18.945754Z","shell.execute_reply.started":"2025-01-24T09:30:18.927381Z","shell.execute_reply":"2025-01-24T09:30:18.94447Z"}},"outputs":[{"execution_count":38,"output_type":"execute_result","data":{"text/plain":"keyword\nfatalities               45\ndeluge                   42\narmageddon               42\nsinking                  41\ndamage                   41\n                         ..\nforest%20fire            19\nepicentre                12\nthreat                   11\ninundation               10\nradiation%20emergency     9\nName: count, Length: 221, dtype: int64"},"metadata":{}}],"execution_count":38},{"cell_type":"code","source":"train.text[:5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.947348Z","iopub.execute_input":"2025-01-24T09:30:18.947757Z","iopub.status.idle":"2025-01-24T09:30:18.96524Z","shell.execute_reply.started":"2025-01-24T09:30:18.947728Z","shell.execute_reply":"2025-01-24T09:30:18.963934Z"}},"outputs":[{"execution_count":39,"output_type":"execute_result","data":{"text/plain":"0    Our Deeds are the Reason of this #earthquake M...\n1               Forest fire near La Ronge Sask. Canada\n2    All residents asked to 'shelter in place' are ...\n3    13,000 people receive #wildfires evacuation or...\n4    Just got sent this photo from Ruby #Alaska as ...\nName: text, dtype: object"},"metadata":{}}],"execution_count":39},{"cell_type":"markdown","source":"# Text Preprocessing","metadata":{}},{"cell_type":"code","source":"import re\ndef preprocess_text(text):\n    text = text.lower()\n    text = re.sub('\\W|,',' ',text)\n    text = re.sub('  ',' ',text)\n    return text\n\nprint(preprocess_text(train.text[0]))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.966435Z","iopub.execute_input":"2025-01-24T09:30:18.966863Z","iopub.status.idle":"2025-01-24T09:30:18.983987Z","shell.execute_reply.started":"2025-01-24T09:30:18.966821Z","shell.execute_reply":"2025-01-24T09:30:18.982677Z"}},"outputs":[{"name":"stdout","text":"our deeds are the reason of this earthquake may allah forgive us all\n","output_type":"stream"}],"execution_count":40},{"cell_type":"code","source":"train['cleaned_text'] = train['text'].apply(preprocess_text)\ntrain.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:18.98512Z","iopub.execute_input":"2025-01-24T09:30:18.985421Z","iopub.status.idle":"2025-01-24T09:30:19.085355Z","shell.execute_reply.started":"2025-01-24T09:30:18.985396Z","shell.execute_reply":"2025-01-24T09:30:19.084177Z"}},"outputs":[{"execution_count":41,"output_type":"execute_result","data":{"text/plain":"   id keyword location                                               text  \\\n0   1     NaN      NaN  Our Deeds are the Reason of this #earthquake M...   \n1   4     NaN      NaN             Forest fire near La Ronge Sask. Canada   \n2   5     NaN      NaN  All residents asked to 'shelter in place' are ...   \n3   6     NaN      NaN  13,000 people receive #wildfires evacuation or...   \n4   7     NaN      NaN  Just got sent this photo from Ruby #Alaska as ...   \n\n   target                                       cleaned_text  \n0       1  our deeds are the reason of this earthquake ma...  \n1       1              forest fire near la ronge sask canada  \n2       1  all residents asked to shelter in place are be...  \n3       1  13 000 people receive wildfires evacuation ord...  \n4       1  just got sent this photo from ruby alaska as s...  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>keyword</th>\n      <th>location</th>\n      <th>text</th>\n      <th>target</th>\n      <th>cleaned_text</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Our Deeds are the Reason of this #earthquake M...</td>\n      <td>1</td>\n      <td>our deeds are the reason of this earthquake ma...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Forest fire near La Ronge Sask. Canada</td>\n      <td>1</td>\n      <td>forest fire near la ronge sask canada</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>5</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>All residents asked to 'shelter in place' are ...</td>\n      <td>1</td>\n      <td>all residents asked to shelter in place are be...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>6</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>13,000 people receive #wildfires evacuation or...</td>\n      <td>1</td>\n      <td>13 000 people receive wildfires evacuation ord...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>7</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Just got sent this photo from Ruby #Alaska as ...</td>\n      <td>1</td>\n      <td>just got sent this photo from ruby alaska as s...</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":41},{"cell_type":"markdown","source":"# Useful Links\nTfidfVectorizer : https://scikit-learn.org/1.5/modules/generated/sklearn.feature_extraction.text.TfidfVectorizer.html <br>\nMultinomialNB: https://scikit-learn.org/1.6/modules/generated/sklearn.naive_bayes.MultinomialNB.html","metadata":{"execution":{"iopub.status.busy":"2025-01-24T09:06:49.739956Z","iopub.execute_input":"2025-01-24T09:06:49.740493Z","iopub.status.idle":"2025-01-24T09:06:49.747293Z","shell.execute_reply.started":"2025-01-24T09:06:49.740449Z","shell.execute_reply":"2025-01-24T09:06:49.745921Z"}}},{"cell_type":"markdown","source":"# Text Vectorization","metadata":{"execution":{"iopub.status.busy":"2025-01-24T09:07:51.40128Z","iopub.execute_input":"2025-01-24T09:07:51.401727Z","iopub.status.idle":"2025-01-24T09:07:51.40597Z","shell.execute_reply.started":"2025-01-24T09:07:51.401693Z","shell.execute_reply":"2025-01-24T09:07:51.404904Z"}}},{"cell_type":"code","source":"from sklearn.feature_extraction.text import TfidfVectorizer\nvectorizer = TfidfVectorizer(max_features=5000)\nX = vectorizer.fit_transform(train['cleaned_text']).toarray()\ny = train['target']","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.086605Z","iopub.execute_input":"2025-01-24T09:30:19.086942Z","iopub.status.idle":"2025-01-24T09:30:19.635909Z","shell.execute_reply.started":"2025-01-24T09:30:19.086917Z","shell.execute_reply":"2025-01-24T09:30:19.634872Z"}},"outputs":[],"execution_count":42},{"cell_type":"code","source":"X[:5]","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.63676Z","iopub.execute_input":"2025-01-24T09:30:19.637013Z","iopub.status.idle":"2025-01-24T09:30:19.644468Z","shell.execute_reply.started":"2025-01-24T09:30:19.636991Z","shell.execute_reply":"2025-01-24T09:30:19.643369Z"}},"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"array([[0.        , 0.        , 0.        , ..., 0.        , 0.        ,\n        0.        ],\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\n        0.        ],\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\n        0.        ],\n       [0.        , 0.46564235, 0.        , ..., 0.        , 0.        ,\n        0.        ],\n       [0.        , 0.        , 0.        , ..., 0.        , 0.        ,\n        0.        ]])"},"metadata":{}}],"execution_count":43},{"cell_type":"markdown","source":"# Split dataset","metadata":{}},{"cell_type":"code","source":"X_train, X_val, y_train, y_val = train_test_split(X,y,test_size=0.2, random_state=42)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.64599Z","iopub.execute_input":"2025-01-24T09:30:19.646397Z","iopub.status.idle":"2025-01-24T09:30:19.797734Z","shell.execute_reply.started":"2025-01-24T09:30:19.64637Z","shell.execute_reply":"2025-01-24T09:30:19.796543Z"}},"outputs":[],"execution_count":44},{"cell_type":"markdown","source":"# Build Model","metadata":{"execution":{"iopub.status.busy":"2025-01-24T09:17:20.776641Z","iopub.execute_input":"2025-01-24T09:17:20.777048Z","iopub.status.idle":"2025-01-24T09:17:20.784988Z","shell.execute_reply.started":"2025-01-24T09:17:20.776995Z","shell.execute_reply":"2025-01-24T09:17:20.783597Z"}}},{"cell_type":"code","source":"from sklearn.naive_bayes import MultinomialNB\nmodel = MultinomialNB()\nmodel.fit(X_train,y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.798871Z","iopub.execute_input":"2025-01-24T09:30:19.799218Z","iopub.status.idle":"2025-01-24T09:30:19.901047Z","shell.execute_reply.started":"2025-01-24T09:30:19.799174Z","shell.execute_reply":"2025-01-24T09:30:19.89989Z"}},"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"MultinomialNB()","text/html":"<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>MultinomialNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-5\" type=\"checkbox\" checked><label for=\"sk-estimator-id-5\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div>"},"metadata":{}}],"execution_count":45},{"cell_type":"code","source":"y_pred = model.predict(X_val)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.902154Z","iopub.execute_input":"2025-01-24T09:30:19.902552Z","iopub.status.idle":"2025-01-24T09:30:19.920754Z","shell.execute_reply.started":"2025-01-24T09:30:19.902492Z","shell.execute_reply":"2025-01-24T09:30:19.919635Z"}},"outputs":[],"execution_count":46},{"cell_type":"code","source":"from sklearn.metrics import classification_report, accuracy_score, confusion_matrix\nclassification_report(y_val,y_pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.921901Z","iopub.execute_input":"2025-01-24T09:30:19.922279Z","iopub.status.idle":"2025-01-24T09:30:19.940715Z","shell.execute_reply.started":"2025-01-24T09:30:19.922242Z","shell.execute_reply":"2025-01-24T09:30:19.939736Z"}},"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"'              precision    recall  f1-score   support\\n\\n           0       0.79      0.91      0.84       874\\n           1       0.84      0.67      0.75       649\\n\\n    accuracy                           0.81      1523\\n   macro avg       0.82      0.79      0.80      1523\\nweighted avg       0.81      0.81      0.80      1523\\n'"},"metadata":{}}],"execution_count":47},{"cell_type":"code","source":"confusion_matrix(y_val,y_pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.941839Z","iopub.execute_input":"2025-01-24T09:30:19.942211Z","iopub.status.idle":"2025-01-24T09:30:19.951795Z","shell.execute_reply.started":"2025-01-24T09:30:19.942156Z","shell.execute_reply":"2025-01-24T09:30:19.950585Z"}},"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"array([[794,  80],\n       [214, 435]])"},"metadata":{}}],"execution_count":48},{"cell_type":"code","source":"accuracy_score(y_val,y_pred)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.952684Z","iopub.execute_input":"2025-01-24T09:30:19.952947Z","iopub.status.idle":"2025-01-24T09:30:19.969695Z","shell.execute_reply.started":"2025-01-24T09:30:19.952925Z","shell.execute_reply":"2025-01-24T09:30:19.968574Z"}},"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"0.8069599474720945"},"metadata":{}}],"execution_count":49},{"cell_type":"markdown","source":"# Hyperparameter tuning","metadata":{}},{"cell_type":"code","source":"param_grid = {\n    'alpha': [0.5,1.0,1.5]\n}\n\ngrid_search = GridSearchCV(MultinomialNB(), param_grid, cv=5, scoring= 'accuracy')\ngrid_search.fit(X_train, y_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:19.970954Z","iopub.execute_input":"2025-01-24T09:30:19.971342Z","iopub.status.idle":"2025-01-24T09:30:22.660955Z","shell.execute_reply.started":"2025-01-24T09:30:19.971308Z","shell.execute_reply":"2025-01-24T09:30:22.659695Z"}},"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"GridSearchCV(cv=5, estimator=MultinomialNB(),\n             param_grid={'alpha': [0.5, 1.0, 1.5]}, scoring='accuracy')","text/html":"<style>#sk-container-id-4 {color: black;background-color: white;}#sk-container-id-4 pre{padding: 0;}#sk-container-id-4 div.sk-toggleable {background-color: white;}#sk-container-id-4 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-4 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-4 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-4 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-4 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-4 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-4 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-4 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-4 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-4 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-4 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-4 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-4 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-4 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-4 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-4 div.sk-item {position: relative;z-index: 1;}#sk-container-id-4 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-4 div.sk-item::before, #sk-container-id-4 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-4 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-4 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-4 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-4 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-4 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-4 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-4 div.sk-label-container {text-align: center;}#sk-container-id-4 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-4 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-4\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GridSearchCV(cv=5, estimator=MultinomialNB(),\n             param_grid={&#x27;alpha&#x27;: [0.5, 1.0, 1.5]}, scoring=&#x27;accuracy&#x27;)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-6\" type=\"checkbox\" ><label for=\"sk-estimator-id-6\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">GridSearchCV</label><div class=\"sk-toggleable__content\"><pre>GridSearchCV(cv=5, estimator=MultinomialNB(),\n             param_grid={&#x27;alpha&#x27;: [0.5, 1.0, 1.5]}, scoring=&#x27;accuracy&#x27;)</pre></div></div></div><div class=\"sk-parallel\"><div class=\"sk-parallel-item\"><div class=\"sk-item\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-7\" type=\"checkbox\" ><label for=\"sk-estimator-id-7\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">estimator: MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-8\" type=\"checkbox\" ><label for=\"sk-estimator-id-8\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">MultinomialNB</label><div class=\"sk-toggleable__content\"><pre>MultinomialNB()</pre></div></div></div></div></div></div></div></div></div></div>"},"metadata":{}}],"execution_count":50},{"cell_type":"code","source":"print(grid_search.best_params_)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:22.66204Z","iopub.execute_input":"2025-01-24T09:30:22.662364Z","iopub.status.idle":"2025-01-24T09:30:22.668136Z","shell.execute_reply.started":"2025-01-24T09:30:22.662336Z","shell.execute_reply":"2025-01-24T09:30:22.666992Z"}},"outputs":[{"name":"stdout","text":"{'alpha': 1.0}\n","output_type":"stream"}],"execution_count":51},{"cell_type":"markdown","source":"# Test Predictions","metadata":{}},{"cell_type":"code","source":"test['cleaned_text'] = test['text'].apply(preprocess_text)\nX_test = vectorizer.transform(test['cleaned_text']).toarray()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:22.669066Z","iopub.execute_input":"2025-01-24T09:30:22.669377Z","iopub.status.idle":"2025-01-24T09:30:22.918412Z","shell.execute_reply.started":"2025-01-24T09:30:22.669351Z","shell.execute_reply":"2025-01-24T09:30:22.917374Z"}},"outputs":[],"execution_count":52},{"cell_type":"code","source":"X_test","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:22.919356Z","iopub.execute_input":"2025-01-24T09:30:22.919654Z","iopub.status.idle":"2025-01-24T09:30:22.925813Z","shell.execute_reply.started":"2025-01-24T09:30:22.919628Z","shell.execute_reply":"2025-01-24T09:30:22.924734Z"}},"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"array([[0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       ...,\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.],\n       [0., 0., 0., ..., 0., 0., 0.]])"},"metadata":{}}],"execution_count":53},{"cell_type":"code","source":"best_model = grid_search.best_estimator_\ntest_predictions = best_model.predict(X_test)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:22.927086Z","iopub.execute_input":"2025-01-24T09:30:22.927437Z","iopub.status.idle":"2025-01-24T09:30:22.991855Z","shell.execute_reply.started":"2025-01-24T09:30:22.927411Z","shell.execute_reply":"2025-01-24T09:30:22.990847Z"}},"outputs":[],"execution_count":54},{"cell_type":"markdown","source":"# Submission","metadata":{}},{"cell_type":"code","source":"submission_df = pd.DataFrame({'id':test['id'], 'target': test_predictions})\nsubmission_df.to_csv('submission.csv', index=False)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:22.992711Z","iopub.execute_input":"2025-01-24T09:30:22.992937Z","iopub.status.idle":"2025-01-24T09:30:23.002872Z","shell.execute_reply.started":"2025-01-24T09:30:22.992917Z","shell.execute_reply":"2025-01-24T09:30:23.001552Z"}},"outputs":[],"execution_count":55},{"cell_type":"code","source":"# The End","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-01-24T09:30:27.939412Z","iopub.execute_input":"2025-01-24T09:30:27.939839Z","iopub.status.idle":"2025-01-24T09:30:27.944527Z","shell.execute_reply.started":"2025-01-24T09:30:27.939812Z","shell.execute_reply":"2025-01-24T09:30:27.943343Z"}},"outputs":[],"execution_count":57}]}